TEST LIST

_______________________________________
###### Original Testlist for AlphaCiv ######
_______________________________________

CITIES
[4] - Red's city is at (1,1)
[18] - Blue's city is at (4,1)
[19] - Should Return null when no city is at the coordinates
[8] - Cities produce 6 'production' after one round has ended
[9] - Cities produce 6 'production' for every round that has ended
[20] - Cities' population size is always 1
[44] - automatically buy unit when enough production
[59] - Cities will be overtaken when an other player kills the defending unit

GAME STATS
[5] - Game should start at 4000 BC
[6] - Game age increments by 100 years after each round
[7] - Red wins to year 3000 BC

UNITS
[21] - Blue has legion at 3,2
[22] - Red has settler at 4,3
[23] - Red has archer at 2,0
[24] - Units can be deleted
[25] - Units can be moved
[26] - Old instances of units will be deleted when moving.
[27] - Red cannot move Blue's unit
[32] - Units cannot move over mountains
[31] - Units cannot move over Oceans
[34] - Units cannot move outside of the world map
[42] - Red's unit attack and destroy Blue's unit
[36] - Players can produce new units
[37] - Units can only be produced at cities
[38] - Players can only produce units at their own cities
[39] - Red City's workforcefocus is on archers when the game starts
[40] - Blue City's workforcefocus is on settlers when the game starts
[41] - A player can change the workforcefocus to other units
[45] - Archers cost 10 production
[] - Get cost value from any archers, legions or settler
[] - Legions cost 15 production
[] - Settlers cost 30 production
[] - Cities produce their workforcefocus unit when they enough production
[28] - Units have 1 movescount
[29] - Movescount gets decremented by 1 for a move
[30] - Units can move 1 distance each round
[33] - Units have their movement restored after each round
[35] - Units can only move as far as their movecount
[64] - Archers default defence is 3
[ ] - Should produce units clockwise around city. Starting in the city and then around.

TILES
[11] - There is ocean at (1,0)
[12] - There is Hills at (0,1)
[13] - There is Mountains at (2,2)
[10] - Game should have a 16x16 tile world map

PLAYERS
[1] - Red is the first player in turn
[2] - Blue is in turn after red Player
[3] - After Red it is Blue that is in turn


IMPLEMENTED METHODS THAT HAVE TO BE TESTED
[14] - get owner from city has to return the right owner
[15] - get city column
[16] - get city row
[17] - return the correct player in turn

___________________________________________________________
#####Compositional Proposal Testlist (Other HotCiv versions)#####
___________________________________________________________

##### AlphaCiv refactoring to work with strategies
[48-49]- refactor AlphaCiv to use a AlphaCiv Aging strategy
    [49] - Game should age 100 years each round
[58] - Refactor AlphaCiv to use AlphaCiv winner strategy
[61] - Refactor alphaCiv to use AlphaCiv unit action strategy (Does nothing)
[68] - Refactor Alhphaciv to use AlphaCiv World Layout strategy
[72] - Refactor AlphaCiv to use AlphaCiv Attacking Strategy
    [73] - Should return 3 as defensive Strength
    [74] - Should return 0 as attacking strength
    [75] - The attacker wins any combat no matter attacking- and defensive strength.
[76] - Refactor alphaciv to use attacking strategy (Necessary for EpsilonCiv)

##### BetaCiv (unit testing)
[50-57] - handle aging structure for BetaCiv
    [50] - Game should age 100 years between 4000 and 100 BC
    [51] - Game should age 99 years between 100 and 1 BC
    [52] - Game should age 2 between 1 BC and 1 AD
    [53] - Game should age 49 between 1 and 50 AD
    [54] - Game should age 50 between 50 and 1750 AD
    [55] - Game should age 25 between 1750 and 1900 AD
    [56] - Game should age 5 between 1900 and 1970 AD
    [57] - Game should age 1 from 1970 AD and beyond

##### BetaCiv (Integration Testing)
[60] - When a player conqures all cities, he should win the game for betaStrategy

##### GammaCiv (Integration Testing)
[62] - Settlers action produces a city on it's position. (GammaCiv)
[63] - Settlers are removed from the game when they have performed their action. (GammaCiv)
[65] - Archers defensive streangth is doubled when their action is performed (GammaCiv)
[66] - Archers cannot move when their action has been performed (GammaCiv)
[67] - Archers can now move again, when their action performed is used again (GammaCiv)

##### DeltaCiv (Integration Testing)
[69-71] - When world layout is created, it should reflect figure 36.1 from the book, there should be a red city at (8,12) and a blue city at (4,5)
        and it should be easy for programmers to change the world layout without changing source code - For DeltaCiv.
    [69] - should have red City at 8,12 (DeltaCiv)
    [70] - should have blue City at 4,5 (DeltaCiv)
    [71] - Tiles should represent figure 36.1 image from the book (DeltaCiv)

##### For EpsilonCiv
[78] - Archer should have 2 attack strength
[79] - Archer should have 3 defence strength
[80] - Legion should have 2 defence strength
[81] - Legion should have 4 attack strength
[82] - Settler should have 0 attack strength
[83] - Settler should have 3 defence strength
[84-89] - Testing different combinations of attacking and defensive strength for units on the map

##### Dice
[77] - Create DieDecisionStrategy with random and fixed die roll
    [77] - Fixed die roll always returns the same value

##### SemiCiv (Smoketests)
[90]  - 6 smoketests for unitaction, beta ageing, delta world layout, respectively.

##### ThetaCiv
[91] - should be able to produce Galleys.
[] - Galleys should cost 30 productions
[] - Galleys should be able to travel 2 distances
[] - Galley should only be able to move on oceans
[] - Galleys defence is 2
[] - Galleys attack is 8
[] - Galley cannot attack units on land
[] - Galley give friendly support to landunits if nearby
[] - Galleys should be able to collinize by changing to a settler
[] - Galley is removed when changed to settler.


#### Manual test for Fractal Adapter
[] - Print all tiles

##### EXTRA
[92] - Add a transcripting class with the decorator pattern
[93] - Make tests for the different transcripts implemented
